class Solution
{
    //Function to find the next greater element for each element of the array.
    public static long[] nextLargerElement(long[] arr, int n)
    { 
        Stack<Long> s = new Stack<>();
        long nextGreatest [] = new long [n];

        for(int i=n-1; i>=0; i--){
        
            while(!s.isEmpty() && s.peek() <= arr[i]){
                s.pop();
            }
            if(s.isEmpty()){
                nextGreatest[i] = -1;
            }else{
                nextGreatest[i] = s.peek();
            }
            s.push(arr[i]);
        }
        return nextGreatest;
    } 
}



class Solution
{
    //Function to find the next greater element for each element of the array.
    public static long[] nextLargerElement(long[] arr, int n)
    { 
        Stack<Integer> s = new Stack<>();
        long ans[] = new long[n];

        for(int i=0; i<n; i++){
            while(!s.isEmpty() && arr[s.peek()] < arr[i]){
                int idx = s.pop();
                ans[idx] = arr[i];
            }
            s.push(i);
        }
        while(!s.isEmpty()){
            ans[s.pop()] = -1;
        }
        return ans;
    } 
}
